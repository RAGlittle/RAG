// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/tmc/langchaingo/schema (interfaces: Retriever)
//
// Generated by this command:
//
//	mockgen -destination=pkg/test/mock/schema/mock_retriever.go github.com/tmc/langchaingo/schema Retriever
//

// Package mock_schema is a generated GoMock package.
package mock_schema

import (
	context "context"
	reflect "reflect"

	schema "github.com/tmc/langchaingo/schema"
	gomock "go.uber.org/mock/gomock"
)

// MockRetriever is a mock of Retriever interface.
type MockRetriever struct {
	ctrl     *gomock.Controller
	recorder *MockRetrieverMockRecorder
}

// MockRetrieverMockRecorder is the mock recorder for MockRetriever.
type MockRetrieverMockRecorder struct {
	mock *MockRetriever
}

// NewMockRetriever creates a new mock instance.
func NewMockRetriever(ctrl *gomock.Controller) *MockRetriever {
	mock := &MockRetriever{ctrl: ctrl}
	mock.recorder = &MockRetrieverMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockRetriever) EXPECT() *MockRetrieverMockRecorder {
	return m.recorder
}

// GetRelevantDocuments mocks base method.
func (m *MockRetriever) GetRelevantDocuments(arg0 context.Context, arg1 string) ([]schema.Document, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetRelevantDocuments", arg0, arg1)
	ret0, _ := ret[0].([]schema.Document)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetRelevantDocuments indicates an expected call of GetRelevantDocuments.
func (mr *MockRetrieverMockRecorder) GetRelevantDocuments(arg0, arg1 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetRelevantDocuments", reflect.TypeOf((*MockRetriever)(nil).GetRelevantDocuments), arg0, arg1)
}
